apiVersion: v1
kind: Template
labels:
  app: sourcegraph
  template: sourcegraph
metadata:
  name: sourcegraph
  template.openshift.io/bindable: "false"
parameters:
  - displayName: Name
    name: NAME
    required: true
    value: sourcegraph
  - displayName: Sourcegraph Frontend Domain
    name: SOURCEGRAPH_FRONTEND_HOST
    required: true
  - displayName: Sourcegraph Management Domain
    name: SOURCEGRAPH_MGMT_HOST
    required: true
objects:

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${NAME}
  spec:
    lookupPolicy:
      local: false
    tags:
    - from:
        kind: DockerImage
        name: sourcegraph/server:3.1.1
      name: "latest"
      referencePolicy:
        type: Source

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-config
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}-data
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi

- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}-management
  spec:
    host: ${SOURCEGRAPH_MGMT_HOST}
    port:
      targetPort: management
    tls:
      termination: edge
    to:
      kind: Service
      name: ${NAME}
      weight: 100
    wildcardPolicy: None

- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}
  spec:
    ports:
      - name: frontend
        port: 80
        protocol: TCP
        targetPort: 7080
      - name: management
        port: 2633
        protocol: TCP
        targetPort: 2633
    selector:
      deploymentconfig: ${NAME}
    type: ClusterIP

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        volumes:
          - name: config
            persistentVolumeClaim:
              claimName: ${NAME}-config
          - name: data
            persistentVolumeClaim:
              claimName: ${NAME}-data
        containers:
          - name: ${NAME}
            env:
              - name: UNSAFE_NO_HTTPS
                value: "true"
            ports:
              - containerPort: 7080
                protocol: TCP
              - containerPort: 2633
                protocol: TCP
            volumeMounts:
              - name: config
                mountPath: /etc/sourcegraph
              - name: data
                mountPath: /var/opt/sourcegraph
        restartPolicy: Always
    test: false
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - ${NAME}
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
      - type: ConfigChange

# --------- OAuth2 Sidecar

- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}-frontend
  spec:
    host: ${SOURCEGRAPH_FRONTEND_HOST}
    port:
      targetPort: proxy
    tls:
      termination: reencrypt
    to:
      kind: Service
      name: ${NAME}-proxy
      weight: 100
    wildcardPolicy: None

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${NAME}-proxy
  spec:
    lookupPolicy:
      local: false
    tags:
      - from:
          kind: DockerImage
          name: openshift/oauth-proxy:latest
        name: "latest"
        referencePolicy:
          type: Source

- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: proxy
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${NAME}-frontend"}}'

- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}-proxy
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: proxy-tls
  spec:
    ports:
      - name: proxy
        port: 443
        targetPort: 8443
    selector:
      deploymentconfig: ${NAME}-proxy

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}-proxy
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${NAME}-proxy
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: ${NAME}-proxy
      spec:
        serviceAccountName: proxy
        containers:
          - name: proxy
            ports:
              - containerPort: 8443
                name: public
            args:
              - --https-address=:8443
              - --provider=openshift
              - --openshift-service-account=proxy
              - --upstream=http://${NAME}:80
              - --tls-cert=/etc/tls/private/tls.crt
              - --tls-key=/etc/tls/private/tls.key
              - --cookie-secret=${PROXY_SECRET}
              - --pass-basic-auth=false
            volumeMounts:
              - mountPath: /etc/tls/private
                name: proxy-tls
        volumes:
          - name: proxy-tls
            secret:
              secretName: proxy-tls
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - proxy
          from:
            kind: ImageStreamTag
            name: ${NAME}-proxy:latest
        type: ImageChange
      - type: ConfigChange
